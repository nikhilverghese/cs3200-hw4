<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/nikhil/Desktop/cs3200-hw4/MediaDB.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3287"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainalbums"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="MedidaDB.sql">--Q1
SELECT LastName, Email
FROM customers

--Q2
SELECT Title, Name
FROM albums NATURAL JOIN artists

--Q3
SELECT State, Count(DISTINCT CustomerId)
FROM customers
WHERE State IS NOT NULL
GROUP BY State
ORDER BY State ASC

--Q4
SELECT State, Count(DISTINCT CustomerId) AS counting
FROM customers
WHERE State IS NOT NULL
GROUP BY State
 HAVING counting &gt; 10;

 --Q5
SELECT Name
FROM artists NATURAL JOIN albums
WHERE Title LIKE &quot;%symphony%&quot;

--Q6
SELECT DISTINCT artists.Name
FROM tracks
JOIN albums ON albums.AlbumId = tracks.AlbumId
JOIN artists ON artists.ArtistId = albums.ArtistId
JOIN playlist_track ON tracks.TrackId = playlist_track.TrackId
JOIN playlists ON playlists.PlaylistId = playlist_track.PlaylistId 
JOIN media_types ON media_types.MediaTypeId = tracks.MediaTypeId
WHERE media_types.Name LIKE &quot;%MPEG%&quot; AND (playlists.Name = &quot;Brazilian Music&quot; OR playlists.Name = &quot;Grunge&quot;)

--Q7
SELECT artists.Name, 
       COUNT(CASE WHEN media_types.Name LIKE '%MPEG%' THEN 1 ELSE NULL END) as counting
FROM tracks
JOIN albums ON albums.AlbumId = tracks.AlbumId
JOIN artists ON artists.ArtistId = albums.ArtistId
JOIN media_types ON media_types.MediaTypeId = tracks.MediaTypeId
GROUP BY artists.Name
HAVING counting &gt; 10;

--Q8
SELECT playlists.PlaylistId, playlists.Name, ROUND(SUM(Milliseconds) / 3600000.0, 2) AS hours
FROM playlists
JOIN playlist_track ON playlists.PlaylistId = playlist_track.PlaylistId
JOIN tracks ON tracks.TrackId = playlist_track.TrackId
GROUP BY playlists.PlaylistId
HAVING hours &gt; 2

--Q9 Artists that have released tracks with two or more genres
--Results show 21 artists that have released at least two different genres in their tracks
SELECT artists.Name, COUNT(DISTINCT genres.Name) AS totalGenre
FROM artists
JOIN albums ON artists.ArtistId = albums.ArtistId
JOIN tracks ON albums.AlbumId = tracks.AlbumId 
JOIN genres ON tracks.GenreId = genres.GenreId
GROUP BY artists.ArtistId
HAVING totalGenre &gt;= 2</sql><current_tab id="0"/></tab_sql></sqlb_project>
